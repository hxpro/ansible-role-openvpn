---
- name: Install packages
  package: name={{ item }} state=installed
  with_items:
    - openvpn

- name: Server configuration
  template:
    src: server.conf.j2
    dest: "{{ ovpn_home ~ ovpn_name }}.conf"
    owner: "{{ ovpn_user }}"
    group: "{{ ovpn_group }}"
    mode: 0600
  notify: ovpn restart

- seport:
    ports: "{{ ovpn_port }}"
    proto: "{{ ovpn_proto }}"
    setype: openvpn_port_t
    state: present
  when: selinux|bool

- sysctl:
    name: net.ipv4.ip_forward
    sysctl_file: /etc/sysctl.d/90-ovpn.conf
    value: '{{ ovpn_ipv4_forwarding }}'
    sysctl_set: yes
    state: present
    reload: yes

# TODO ipv6
#- sysctl:
#    name: net.ipv6.conf.all.forwarding
#    sysctl_file: /etc/sysctl.d/90-ovpn.conf
#    value: '{{ ovpn_ipv6_forwarding }}'
#    sysctl_set: yes
#    state: present
#    reload: yes

- name: ccd dir
  file:
    path: "{{ openvpn_client_config_dir }}"
    state: directory
  when: openvpn_client_config_dir is defined

- name: Generate dhparam
  command: openssl dhparam -out {{ ovpn_home ~ ovpn_name }}_dh.pem 2048
    creates='{{ ovpn_home ~ ovpn_name }}_dh.pem'
  when: ovpn_dh is not defined

- name: DH
  copy:
    content: "{{ ovpn_dh }}"
    dest: "{{ ovpn_home ~ ovpn_name }}_dh.pem"
  when: ovpn_dh is defined

# TODO generate CA, key, cert if not defined and not present on the server

- name: CA
  copy:
    content: "{{ ovpn_ca }}"
    dest: "{{ ovpn_home ~ ovpn_name }}_ca.pem"
  when: ovpn_ca is defined

- name: key
  copy:
    content: "{{ ovpn_key }}"
    dest: "{{ ovpn_home ~ ovpn_name }}.key"
  when: ovpn_key is defined

- name: cert
  copy:
    content: "{{ ovpn_cert }}"
    dest: "{{ ovpn_home ~ ovpn_name }}.crt"
  when: ovpn_cert is defined

- name: Firewall rule
  iptables:
    chain: INPUT
    action: insert
    protocol: "{{ ovpn_proto }}"
    destination_port: "{{ ovpn_port }}"
    jump: ACCEPT

- name: Server service
  systemd:
    name: "openvpn-server@{{ ovpn_name }}.service"
    enabled: yes
    state: started
